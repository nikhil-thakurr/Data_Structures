Q-Link : https://leetcode.com/problems/open-the-lock/

class Solution {
public:
  
    void generate(string &curr, unordered_set<string>&st,queue<string>&q){
        for(int i=0;i<4;i++){
            
            char ch=curr[i];

            char inc=(ch=='9')?'0':ch+1;
            char dec=(ch=='0')?'9':ch-1;

            curr[i]=inc;

            if(st.find( curr)==st.end()){
                q.push( curr);
                st.insert( curr);
            }

             curr[i]=dec;

            if(st.find( curr)==st.end()){
                q.push( curr);
                st.insert( curr);
            }

        curr[i]=ch;

        }
    }

    int openLock(vector<string>& deadends, string target) {
        string start="0000";
        unordered_set<string>st(begin(deadends),end(deadends));
        if(st.find(start)!=st.end())return -1;
        int level=0;

        queue<string>q;
        q.push(start);

        while(!q.empty()){
            
            int sz=q.size();
            
            while(sz--){
                string curr=q.front();
                q.pop();
                if(curr==target)return level;

                generate(curr,st,q);

            }
            level++;
        }
        return -1;
    }
};
