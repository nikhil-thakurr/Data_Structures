Q-Link : https://leetcode.com/problems/island-perimeter/description/?envType=daily-question&envId=2024-04-18

Approach 1 : BFS

class Solution {
public:
    
    int val=0;
    int n,m;
    vector<vector<int>>dir {{1,0},{-1,0},{0,-1},{0,1}};

    void bfs(vector<vector<int>>& grid,int i,int j){
        queue<pair<int,int>>q;
        q.push({i,j});
        grid[i][j]=-1;
        while(!q.empty()){
            int r=q.front().first;
            int c=q.front().second;
            q.pop();

            for(auto& d :dir){
                int newi=r+d[0];
                int newc=c+d[1];

                if(newi<0 || newc<0 || newi >=n || newc>=m ||grid[newi][newc]==0){
                    val++;
                }
                else if(grid[newi][newc]==-1)continue;
                else if(grid[newi][newc]==1){
                    q.push({newi,newc});
                    grid[newi][newc]=-1;
                }
            }
        }
    }

    int islandPerimeter(vector<vector<int>>& grid) {
        n=grid.size(),m=grid[0].size();
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
               
                if(grid[i][j]==1){
                  bfs(grid,i,j);
                  return val;
                }
            }
        }

        return -1;
    }
};

Approach 2 : DFS

class Solution {
public:
    
    int val=0;
    int n,m;

    void dfs(vector<vector<int>>& grid,int i,int j){
        if(i<0 ||j<0 || i>=n || j>=m || grid[i][j]==0){
            val++;
            return;
        }

        if(grid[i][j]==-1)return;

        grid[i][j]=-1;

        dfs(grid,i-1,j);
        dfs(grid,i+1,j);
        dfs(grid,i,j+1);
        dfs(grid,i,j-1);
    }

    int islandPerimeter(vector<vector<int>>& grid) {
        n=grid.size(),m=grid[0].size();
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
               
                if(grid[i][j]==1){
                  dfs(grid,i,j);
                  return val;
                }
            }
        }

        return -1;
    }
};
