Q-Link : https://leetcode.com/problems/find-if-path-exists-in-graph/


class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        unordered_map<int,vector<int>>mp;
        vector<bool>vis(n,false);

        if(source==destination)return true;

        for(auto& x :edges){
            mp[x[0]].push_back(x[1]);
            mp[x[1]].push_back(x[0]);
        }

        queue<int>q;
        q.push(source);
        vis[source]=true;
        while(!q.empty()){
            int src=q.front();
            q.pop();
            
            if(src==destination)return true;

            for(auto& x :mp[src]){
                if(vis[x]==false){
                    q.push(x);
                    vis[x]=true;
                }
            }

        }
        return false;
    }
};
